spring:
  mvc:
    async:
      # 设定async请求的超时时间，以毫秒为单位，如果没有设置的话，以具体实现的超时时间为准，比如tomcat的servlet3的话是10秒
      request-timeout: 10
    # 在重定向时是否忽略默认model的内容,默认true
    ignore-default-model-on-redirect: true
    # 指定使用的Locale
    locale: zh_CN
    # 指定message codes的格式化策略(PREFIX_ERROR_CODE,POSTFIX_ERROR_CODE)
    message-codes-resolver-format: postfix-error-code
    view:
      # 指定mvc视图的前缀和后缀
      prefix: 
      suffix: 
    # 设定日期时间的格式
    format:
      date-time: yyyy-MM-dd HH:mm:ss
      date: yyyy-MM-dd
      time: HH:mm:ss
    converters:
      # 是否优先使用JSON mapper来转换
      preferred-json-mapper: 
    log-request-details: false

  hateoas:
    use-hal-as-default-json-media-type: false

  resources:
    # 是否开启默认的资源处理,默认true
    add-mappings: true
    # 指定静态资源路径,默认为classpath:[/META-INF/resources/,/resources/, /static/, /public/]以及context:/
    static-locations:
    # 设定资源的缓存时效,以秒为单位
    cache:
      period: 18000
    chain:
      # 是否开启资源 handling chain,默认false
      enabled: false
      # 是否开启缓存,默认true
      cache: true
      # 是否开启h5应用的cache manifest重写,默认为false
      html-application-cache: false
      strategy:
        content:
          # 是否开启内容版本策略,默认false
          enabled: false
          # 指定要应用的版本的路径,多个以逗号分隔,默认为:[/**]
          paths: "/**"
        fixed: 
          # 是否开启固定的版本策略默认false
          enabled: false
          # 指定要应用版本策略的路径,多个以逗号分隔
          paths:
          - /**
          # 指定版本策略使用的版本号
          version: 1
  servlet:
    multipart:
      # 是否开启文件上传支持,默认为true
      enabled: true
      # 设定文件写入磁盘的阈值,单位为MB或KB,默认为0
      file-size-threshold: 10MB
      # 指定文件上传路径
      location: 
      # 指定文件大小最大值,默认1MB
      max-file-size: 10MB
      # 指定每次请求的最大值,默认为10MB
      max-request-size: 10MB
      # 是否懒解析
      resolve-lazily: true

  messages:
    # 指定message的basename,多个以逗号分隔,如果不加包名的话,默认从classpath路径开始,默认: messages
    basename:
    # 设定加载的资源文件缓存失效时间,-1的话为永不过期,默认为-1
    cache-duration: -1
    # 设定Message bundles的编码.默认UTF-8
    encoding: UTF-8

  freemarker:
    # 指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
    allow-request-override: true
    # 指定HttpSession的属性是否可以覆盖controller的model的同名项
    allow-session-override: true
    # 是否开启template caching
    cache: false
    # 设定Template的编码
    charset: UTF-8
    # 是否检查templates路径是否存在
    check-template-location: false 
    # 设定Content-Type
    content-type: application/*
    # 是否允许mvc使用freemarker
    enabled: true
    # 设定所有request的属性在merge到模板的时候,是否要都添加到model中
    expose-request-attributes: true
    # 设定所有HttpSession的属性在merge到模板的时候,是否要都添加到model中
    expose-session-attributes: true
    # 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
    expose-spring-macro-helpers: true
    # 是否优先从文件系统加载template,以支持热加载,默认为true
    prefer-file-system-access: true
    # 设定freemarker模板的前缀
    prefix: 
    # 设定freemarker模板后缀
    suffix: .ftl
    # 指定RequestContext属性的名
    request-context-attribute:
    # 设定模板的加载路径,多个以逗号分隔,默认: ["classpath:/templates/"]
    template-loader-path:
    - 
    # 指定使用模板的视图列表
    view-names:
    -  
    # 设定FreeMarker keys
    settings:
      key1: value1

  thymeleaf:
    # 是否开启模板缓存,默认true
    cache: true
    check-template: false
    # 是否检查模板路径是否存在,默认true
    check-template-location: true
    enable-spring-el-compiler: true 
    # 是否允许MVC使用Thymeleaf,默认为true
    enabled: true
    # 指定模板的编码,默认为UTF-8
    encoding: UTF-8
    # 指定不使用模板的视图名称,多个以逗号分隔
    excluded-view-names:
    -
    # 指定模板的模式,具体查看StandardTemplateModeHandlers,默认为HTML5 
    mode: html5
    # 指定模板的前缀,默认为:classpath:/templates/
    prefix: 
    reactive:
      chunked-mode-view-names:
      - 
      full-mode-view-names:
      -
      media-types:
      -  
      max-chunk-size:
    render-hidden-markers-before-checkboxes: true
    servlet:
      # 指定Content-Type,默认为: text/html
      content-type: 
      produce-partial-output-while-processing: true
    # 指定模板的后缀,默认为html
    suffix: 
    # 指定模板的解析顺序,默认为第一个
    template-resolver-order: 1
    # 指定使用模板的视图名,多个以逗号分隔
    view-names:
    - 

  mustache:
    # 是否Enable template caching
    cache: false
    allow-request-override: false
    allow-session-override: false
    charset: UTF-8
    # 是否检查默认的路径是否存在
    check-template-location: false
    # 指定Content-Type
    content-type: application/*
    # 是否开启mustcache的模板支持
    enabled: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: false
    # 指定模板的前缀,默认classpath:/templates/
    prefix: 
    request-context-attribute: 
    # 指定模板的后缀,默认html
    suffix: 
    # 指定使用模板的视图名,多个以逗号分隔
    view-names:
    - 

  groovy:
    template:
      # 指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
      allow-request-override: false
      # 指定HttpSession的属性是否可以覆盖controller的model的同名项
      allow-session-override: false
      cache: false
      # 指定Template编码
      charset: UTF-8
      # 是否检查模板的路径是否存在
      check-template-location: false 
      configuration:
        # 是否在渲染模板时自动排查model的变量,默认为false
        auto-escape: false
        # 是否在渲染模板时自动缩进,默认为false 
        auto-indent: false
        # 如果自动缩进启用的话,是使用SPACES还是TAB,默认为SPACES
        auto-indent-string: 
        # 渲染模板时是否要输出换行,默认为false
        auto-new-line: false
        # 指定template base class
        base-template-class: 
        # 是否要缓存模板,默认为true 
        cache-templates: true
        # 在写入declaration header时使用的编码
        declaration-encoding: 
        # 是使用<br/>这种形式,还是<br></br>这种展开模式,默认为false
        expand-empty-elements: false 
        # 指定template locale
        locale: 
        # 当启用自动换行时,换行的输出,默认为系统的line.separator属性的值
        new-line-string: 
        # 指定groovy的模板路径,默认为classpath:/templates/
        resource-loader-path: 
        # 指定属性要使用双引号还是单引号,默认为false
        use-double-quotes: false
      content-type: 
      # 是否开启groovy模板的支持
      enabled: false
      # 设定所有request的属性在merge到模板的时候,是否要都添加到model中
      expose-request-attributes: false
      # 设定所有request的属性在merge到模板的时候,是否要都添加到model中
      expose-session-attributes: false
      # 设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
      expose-spring-macro-helpers: false
      # 指定模板的前缀
      prefix: 
      # 指定RequestContext属性的名
      request-context-attribute: 
      # 指定模板的路径,默认为classpath:/templates/
      resource-loader-path: 
      # 指定模板的后缀
      suffix: 
      # 指定要使用模板的视图名称
      view-names:
      - 

  jackson:
    # 指定日期格式,比如yyyy-MM-dd HH:mm:ss,或者具体的格式化类的全限定名
    date-format: 
    default-property-inclusion: always
    # Jackson的反序列化配置
    deserialization: 
      accept-empty-array-as-null-object: false
      accept-empty-string-as-null-object: false
      accept-float-as-int: false
      accept-single-value-as-array: false
      adjust-dates-to-context-time-zone: false
      eager-deserializer-fetch: false
      fail-on-ignored-properties: false
      fail-on-invalid-subtype: false
      fail-on-missing-creator-properties: false
      fail-on-missing-external-type-id-property: false
      fail-on-null-creator-properties: false
      fail-on-null-for-primitives: false
      fail-on-numbers-for-enums: false
      fail-on-reading-dup-tree-key: false
      fail-on-trailing-tokens: false
      fail-on-unknown-properties: false
      fail-on-unresolved-object-ids: false
      read-date-timestamps-as-nanoseconds: false
      read-enums-using-to-string: false
      read-unknown-enum-values-as-null: false
      read-unknown-enum-values-using-default-value: false
      unwrap-root-value: false
      unwrap-single-value-arrays: false
      use-big-decimal-for-floats: false
      use-big-integer-for-ints: false
      use-java-array-for-json-array: false
      use-long-for-ints: false
      wrap-exceptions: false
    # 是否开启json的generators
    generator: 
      ignore-unknown: true
      auto-close-json-content: false
      auto-close-target: false
      flush-passed-to-stream: false
      strict-duplicate-detection: false
      write-bigdecimal-as-plain: false
    # 指定json使用的Locale
    locale: zh_CN
    # 是否开启Jackson通用的特性
    mapper:
      accept-case-insensitive-enums: false
      accept-case-insensitive-properties: false
      accept-case-insensitive-values: false
      allow-coercion-of-scalars: false
      allow-explicit-property-renaming: false
      allow-final-fields-as-mutators: false
      auto-detect-creators: false
      auto-detect-fields: false
      auto-detect-getters: false
      auto-detect-is-getters: false
      auto-detect-setters: false
      block-unsafe-polymorphic-base-types: false
      can-override-access-modifiers: false
      default-view-inclusion: false
      ignore-duplicate-module-registrations: false
      ignore-merge-for-unmergeable: false
      infer-creator-from-constructor-properties: false
      infer-property-mutators: false
      override-public-access-modifiers: false
      propagate-transient-marker: false
      require-setters-for-getters: false
      sort-properties-alphabetically: false
      use-annotations: false
      use-base-type-as-default-impl: false
      use-getters-as-setters: false
      use-static-typing: false
      use-std-bean-naming: false
      use-wrapper-name-as-property-name: false
    # 是否开启jackson的parser特性
    parser:
      # 是否允许有注释
      allow-comments: false
      # 是否允许有单引号
      allow-single-quotes: false
      # 是否允许有不加引号的字段
      allow-unquoted-field-names: true
      # 是否允许yaml文件中的注释
      allow-yaml-comments: false
      auto-close-source: false
      # 忽略未定义的字段
      ignore-undefined: false
      include-source-in-location: false
      strict-duplicate-detection: false
      allow-backslash-escaping-any-character: false
      allow-leading-decimal-point-for-numbers: false
    # 指定PropertyNamingStrategy (CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)或者指定PropertyNamingStrategy子类的全限定类名
    property-naming-strategy: 
    # 是否开启jackson的序列化
    serialization:
      close-closeable: false
      eager-serializer-fetch: false
      fail-on-empty-beans: false
      fail-on-self-references: false
      fail-on-unwrapped-type-identifiers: false
      flush-after-write-value: false
      indent-output: false
      order-map-entries-by-keys: false
      use-equality-for-object-id: false
      wrap-exceptions: false
      wrap-root-value: false
      write-char-arrays-as-json-arrays: false
      write-date-keys-as-timestamps: false
      #将时间戳转换为纳秒输出
      write-date-timestamps-as-nanoseconds: false
      # 将时间类型转换为时间戳输出
      write-dates-as-timestamps: false
      write-dates-with-zone-id: false
      # 将Duration转换为时间戳输出
      write-durations-as-timestamps: false
      # 将枚举的索引作为key序列化
      write-enum-keys-using-index: false
      write-enums-using-index: false
      write-enums-using-to-string: false
      write-self-references-as-null: false
      write-single-elem-arrays-unwrapped: false
    # 指定日期格式化时区,比如Asia/ShangHai或者GMT+8
    time-zone:
    visibility: 
      all: any
