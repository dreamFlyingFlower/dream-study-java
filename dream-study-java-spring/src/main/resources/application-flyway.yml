spring:
  flyway:
    # 开启 flyway
    enabled: true
    # 会删除指定 schema 下的所有 table, 生产务必须使用true.默认false会清表
    clean-disabled: true
    # SQL 迁移的编码
    encoding: UTF-8
    # 迁移脚本的位置,默认 db/migration
    locations: classpath:db/migration
    # SQL 迁移的文件名前缀.默认V开头的文件只执行一次,如果升级,只会执行版本号更大的文件
    sql-migration-prefix: V
    # SQL 重复迁移的文件名前缀,默认R,即R开头的文件可重复执行
    repeatable-sql-migration-prefix: R
    # SQL 迁移的文件名分隔符
    sql-migration-separator: __
    # SQL 迁移的文件名后缀
    sql-migration-suffixes: .sql
    # 执行迁移时是否自动调用验证.当版本不符合逻辑,比如先执行了 DML 而没有对应的DDL会抛出异常
    validate-on-migrate: true
    # 如果没有 flyway_schema_history 这个 metadata 表,在执行 flyway migrate 之前,必须先执行 flyway baseline 命令
    # 设置为 true 后 flyway 将在需要 baseline 的时候, 自动执行一次 baseline
    baseline-on-migrate: true
    # 指定 baseline 的版本号,默认值为 1, 低于该版本号的 SQL 文件, migrate 时会被忽略
    baseline-version: 1
    # 是否允许不按顺序迁移 开发建议 true  生产建议 false
    out-of-order: false
    # 需要 flyway 管控的 schema list,这里配置为flyway缺省的话,使用spring.datasource.url配置的那个 schema,
    # 可以指定多个schema,但仅会在第一个schema下建立 metadata 表, 也仅在第一个schema应用migration sql 脚本
    # 但flyway Clean 命令会依次在这些schema下都执行一遍. 所以确保生产 spring.flyway.clean-disabled 为 true
    schemas: flyway
    # JDBC 驱动程序的完全限定名称. 默认根据 URL 自动检测
    driver-class-name:
    # 要迁移的数据库的 url. 如果未设置,则使用主要配置的数据源
    url: jdbc:mysql://127.0.0.1:3306/dream_auth?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&allowMultiQueries=true&useSSL=false&serverTimezone=UTC&&allowPublicKeyRetrieval=true
    # 要迁移的数据库的登录密码
    password: root
    # 要迁移的数据库的登录用户
    user: 123456

  # MySQL 配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
    username: root
    password: 123456