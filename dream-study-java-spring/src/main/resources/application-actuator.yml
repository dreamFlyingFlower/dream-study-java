management:
  # 定义actuator的监控服务以及端口,可以和程序的不同
  server:
    address: 127.0.0.1
    port: 11111
  endpoints:
    web:
      # 效果等同于server.context-path,若同时存在,base-path优先级更高
      base-path: /actuator
      exposure:
        # 暴露所有的Actuator监控端点,默认只开放health和info端点
        #include: "*"
        # 暴露多个端点
        include:
        - health
        - info
        # 那些端点不打开
        exclude:
        - trace
  # 单个端点的配置
  endpoint:
    shutdown:
      # 设置该值为true表示可调用actuator的shutdown接口关闭程序,默认该配置为false
      enabled: true
    # 允许访问ip:port/actuator/beans,默认true.显示容器中的bean列表
    beans:
      enabled: true
    # 允许访问ip:port/actuator/caches,默认true.显示应用中的缓存
    caches:
      enabled: true
    # 允许访问ip:port/actuator/conditions,默认true.显示配置条件的计算情况
    conditions:
      enabled: true
    # 允许访问ip:port/actuator/configprops,默认true.显示@ConfigurationProperties的信息
    configprops:
      enabled: true
    # 允许访问ip:port/actuator/env,默认true.显示ConfigurableEnvironment中的信息
    env:
      enabled: true
    # 允许访问ip:port/actuator/httptrace,默认true.显示httptrace的信息
    httptrace:
      enabled: true
    # 允许访问ip:port/actuator/info,默认true.显示设置好的应用信息
    info:
      enabled: true
    # 允许访问ip:port/actuator/startup,显示每个Bean的初始化时间,默认true.显示启动信息
    startup:
      enabled: true
    # 允许访问ip:port/actuator/health,默认true.显示健康检查
    health:
      enabled: true
      # 查看详情,默认NEVER
      show-details: always
      # 查看组件
      show-components: always
  # 设置health的信息
  health:
    # db监控
    db:
      enabled: true
      
# 若Admin服务端开启了Security,则客户端需要如下配置     
spring:
  boot:
    admin:
      client:
        username: admin
        password: 123456
        instance:
          metadata:
            user: 
              name: admin
              password: 123456

  cloud:
    nacos:
      discovery:
        # 如果集成了nacos,可以将actuator的元数据添加到服务发现组件中
        metadata:
          # 如果集成了security,可以配置权限
          user:
            name: admin
            password: 123456
          management:
            context-path: ${server.servlet.context-path}/actuator
        