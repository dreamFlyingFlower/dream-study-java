<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>dream.flying.flower</groupId>
		<artifactId>dream-parent2</artifactId>
		<version>0.0.1</version>
		<relativePath />
	</parent>

	<artifactId>dream-study-java-spring</artifactId>
	<name>dream-study-java-spring</name>
	<description>Study for springcommon</description>

	<properties>
		<java.version>1.8</java.version>
		<debezium.version>1.5.2.Final</debezium.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>dream.flying.flower</groupId>
			<artifactId>dream-study-java-common</artifactId>
			<version>0.0.1</version>
		</dependency>
		<dependency>
			<groupId>dream.flying.flower</groupId>
			<artifactId>dream-framework-mybatis-plus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-loader</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.rholder</groupId>
			<artifactId>guava-retrying</artifactId>
			<version>2.0.0</version>
		</dependency>

		<dependency>
			<groupId>io.minio</groupId>
			<artifactId>minio</artifactId>
		</dependency>
		<!-- minio文件断点续传 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
		</dependency>
		<dependency>
			<groupId>io.debezium</groupId>
			<artifactId>debezium-api</artifactId>
			<version>${debezium.version}</version>
		</dependency>
		<dependency>
			<groupId>io.debezium</groupId>
			<artifactId>debezium-embedded</artifactId>
			<version>${debezium.version}</version>
		</dependency>
		<dependency>
			<groupId>io.debezium</groupId>
			<artifactId>debezium-connector-mysql</artifactId>
			<version>${debezium.version}</version>
		</dependency>
		<dependency>
			<groupId>com.lmax</groupId>
			<artifactId>disruptor</artifactId>
			<version>4.0.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers-standard-package</artifactId>
		</dependency>

		<dependency>
			<groupId>com.yomahub</groupId>
			<artifactId>liteflow-spring-boot-starter</artifactId>
			<version>2.11.4.2</version>
		</dependency>
		<dependency>
			<groupId>com.github.lianjiatech</groupId>
			<artifactId>retrofit-spring-boot-starter</artifactId>
			<version>3.1.1</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>logbook-spring-boot-starter</artifactId>
		</dependency>

		<!--
		构建时生成Spring组件(如@Component,@Service等)的索引,通过创建此元数据文件,Spring可以避免在运行时扫描类路径以查找这些组件的昂贵操作 -->
		<!--
		Bean扫描非常耗时,通过利用索引器,Spring可以快速定位和初始化Bean,而无需执行完整的类路径扫描,减少了具有大量Bean或复杂包结构的应用程序的启动时间 -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-indexer</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<!-- 以相对路径方式定义第三方依赖组件 -->
		<!-- <dependency> -->
		<!-- <groupId>dream.flying.flower</groupId> -->
		<!-- <artifactId>dream-tool-core</artifactId> -->
		<!-- <version>0.0.1</version> -->
		<!-- <scope>system</scope> -->
		<!--
	<systemPath>${project.basedir}/lib/dream-tool-core-0.0.1.jar</systemPath> -->
		<!-- </dependency> -->
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-bom</artifactId>
				<version>2.8.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>2.7.18</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- 搭配maven-assembly-plugin插件进行使用 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<!-- The configuration of the plugin -->
				<configuration>
					<!-- Specifies the configuration file of the assembly plugin -->
					<descriptors>
						<descriptor>
							${project.basedir}/src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<!-- https://mp.weixin.qq.com/s/WipGDWfK-_zP6afq7kr-cA 补全 -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<!-- 项目打包完成的包中只包含当前环境文件 -->
					<include>mapper/**/*.xml</include>
					<include>logback-spring.xml</include>
					<include>static/**</include>
					<include>application.yml</include>
					<include>bootstrap.properties</include>
				</includes>
				<!-- 打包排除项 -->
				<excludes>
					<exclude>**/*.sh</exclude>
					<exclude>**/*.rar</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 传递给脚本的参数值 -->
				<activeProfile>dev</activeProfile>
				<package-name>${project.name}-dev-${project.version}</package-name>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<activeProfile>test</activeProfile>
				<package-name>${project.name}-dev-${project.version}</package-name>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<activeProfile>prod</activeProfile>
				<package-name>${project.name}-dev-${project.version}</package-name>
			</properties>
		</profile>
	</profiles>
</project>